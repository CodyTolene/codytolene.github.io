@use 'sass:map';
@use 'sass:math';
@use 'sass:color';
@use '@angular/material' as mat;

@import 'fonts';

@function _get-palette-hue($hues, $hue, $prev-hue, $next-hue) {
  $weight: math.div($next-hue - $hue, $next-hue - $prev-hue) * 100%;
  @return color.mix(
    map.get($hues, $prev-hue),
    map.get($hues, $next-hue),
    $weight
  );
}

@function _parse-palette-hues($palette) {
  $neutral: map.get($palette, neutral);
  $palette: map.set($palette, neutral, 4, _get-palette-hue($neutral, 4, 0, 10));
  $palette: map.set($palette, neutral, 6, _get-palette-hue($neutral, 6, 0, 10));
  $palette: map.set(
    $palette,
    neutral,
    12,
    _get-palette-hue($neutral, 12, 10, 20)
  );
  $palette: map.set(
    $palette,
    neutral,
    17,
    _get-palette-hue($neutral, 17, 10, 20)
  );
  $palette: map.set(
    $palette,
    neutral,
    22,
    _get-palette-hue($neutral, 22, 20, 25)
  );
  $palette: map.set(
    $palette,
    neutral,
    24,
    _get-palette-hue($neutral, 24, 20, 25)
  );
  $palette: map.set(
    $palette,
    neutral,
    87,
    _get-palette-hue($neutral, 87, 80, 90)
  );
  $palette: map.set(
    $palette,
    neutral,
    92,
    _get-palette-hue($neutral, 92, 90, 95)
  );
  $palette: map.set(
    $palette,
    neutral,
    94,
    _get-palette-hue($neutral, 94, 90, 95)
  );
  $palette: map.set(
    $palette,
    neutral,
    96,
    _get-palette-hue($neutral, 96, 95, 98)
  );
  @return $palette;
}

@function parse-palette($palette) {
  @return _parse-palette-hues($palette);
}

@function create-theme(
  $palette-primary,
  $palette-tertiary,
  $type: light,
  $density: 0
) {
  @return mat.define-theme(
    (
      color: (
        theme-type: $type,
        primary: parse-palette($palette-primary),
        tertiary: parse-palette($palette-tertiary),
        use-system-variables: true,
      ),
      typography: (
        plain-family: $font_family,
        brand-family: $font_family,
        bold-weight: 700,
        medium-weight: 500,
        regular-weight: 300,
        use-system-variables: true,
      ),
      density: (
        scale: 0,
      ),
    )
  );
}
