{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/core/core-routes.module.ts","./src/core/core.component.ts","./src/core/core.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { CoreComponent } from './core.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    children: [\n      {\n        loadChildren: () =>\n          import('../pages/index/index.module').then(\n            (module) => module.IndexModule,\n          ),\n        path: '',\n      },\n      {\n        loadChildren: () =>\n          import('../pages/privacy-policy/privacy-policy.module').then(\n            (module) => module.PrivacyPolicyModule,\n          ),\n        path: 'privacy-policy',\n      },\n    ],\n    component: CoreComponent,\n    path: '',\n  },\n  {\n    loadChildren: () =>\n      import('../pages/not-found/not-found.module').then(\n        (module) => module.NotFoundModule,\n      ),\n    path: '404',\n  },\n  {\n    path: '**',\n    redirectTo: '404',\n  },\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forRoot(routes)],\n})\nexport class CoreRoutesModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-core',\n  template: `<router-outlet></router-outlet>`,\n})\nexport class CoreComponent {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CoreRoutesModule } from './core-routes.module';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CoreComponent } from './core.component';\n\n@NgModule({\n  bootstrap: [CoreComponent],\n  declarations: [CoreComponent],\n  imports: [\n    BrowserModule,\n    CoreRoutesModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n    }),\n    NgbModule,\n  ],\n  providers: [],\n})\nexport class CoreModule {}\n","import { Environment } from './environment-type';\n\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment: Environment = {\n  production: false,\n  version: require('../../package.json').version + '-dev',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { CoreModule } from './core/core.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(CoreModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}